package com.inovusbot.mytestbot.module.jira.service;

import com.inovusbot.mytestbot.module.jira.model.Issue;
import com.inovusbot.mytestbot.module.jira.model.IssueWorklog;
import com.inovusbot.mytestbot.service.MessageSenderService;
import com.inovusbot.mytestbot.service.UserService;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class JiraService {

    private final MessageSenderService messageSenderService;
    private final UserService userService;


    private final WorklogsService worklogsService;

    public JiraService(MessageSenderService messageSenderService, UserService userService, WorklogsService worklogsService) {
        this.messageSenderService = messageSenderService;
        this.userService = userService;
        this.worklogsService = worklogsService;
    }

    public void showAllTasks(String userId) {
        List<Issue> issues = getInProgressTaskList();
        StringBuilder issuesAndSummary = new StringBuilder();

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInLine = new ArrayList<>();

        issues.forEach(issue -> {
            issuesAndSummary.append(issue.getLabel()).append(" ").append(issue.getSummary()).append("\n");

            InlineKeyboardButton worklogsButton = new InlineKeyboardButton();
            worklogsButton.setText(issue.getLabel());
            worklogsButton.setCallbackData("jira-worklogs-time-" + issue.getLabel() + "-0-0");
            List<InlineKeyboardButton> worklogsRow = new ArrayList<>();
            worklogsRow.add(worklogsButton);
            rowsInLine.add(worklogsRow);
        });

        String text = "–ù–∞–¥ —ç—Ç–∏ –∑–∞–¥–∞—á–∞–º–∏ —Ç—ã —Å–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞–ª. –ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ, –¥–æ–ª–∂–µ–Ω –±—ã–ª: \n\n" +
                issuesAndSummary + "\n" +
                "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∫–∞–∫—É—é –∑–∞–¥–∞—á—É –±—É–¥–µ–º —Å–ø–∏—Å—ã–≤–∞—Ç—å —Ç–≤–æ—é –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—é.";

        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("\uD83D\uDD19 –ù–∞–∑–∞–¥");
        backButton.setCallbackData("/jira");
        List<InlineKeyboardButton> backRow = new ArrayList<>();
        backRow.add(backButton);
        rowsInLine.add(backRow);

        inlineKeyboardMarkup.setKeyboard(rowsInLine);

        messageSenderService.sendMessage(userId, text, true, inlineKeyboardMarkup);

        userService.setContext(userId, "jira-worklogs");
    }

    public void setWorklogTime(String userId, String issue, Integer hours, Integer minutes) {
        System.out.println("Issee: " + issue );
        String text = """
                –£—Å—Ç–∞–Ω–æ–≤–∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–¥–∞—á–∏ %s:
                
                """.formatted(issue);


        List<InlineKeyboardButton> hoursRow = new ArrayList<>();
        InlineKeyboardButton hoursTitleButton = new InlineKeyboardButton();
        hoursTitleButton.setText("–ß–∞—Å—ã: ");
        hoursTitleButton.setCallbackData("do-nothing");
        hoursRow.add(hoursTitleButton);

        InlineKeyboardButton hoursMinusButton = new InlineKeyboardButton();
        hoursMinusButton.setText("‚ûñ");
        hoursMinusButton.setCallbackData("jira-worklogs-time-" + issue + "-" +
                (hours < 1 ? 0 : hours - 1)
                + "-" + minutes);
        hoursRow.add(hoursMinusButton);

        InlineKeyboardButton hoursCountButton = new InlineKeyboardButton();
        hoursCountButton.setText(hours.toString());
        hoursCountButton.setCallbackData("do-nothing");
        hoursRow.add(hoursCountButton);

        InlineKeyboardButton hoursPlusButton = new InlineKeyboardButton();
        hoursPlusButton.setText("‚ûï");
        hoursPlusButton.setCallbackData("jira-worklogs-time-" + issue + "-" +
                (hours > 11 ? 12 : hours + 1)
                + "-" + minutes);
        hoursRow.add(hoursPlusButton);


        List<InlineKeyboardButton> minutesRow = new ArrayList<>();
        InlineKeyboardButton minutesTitleButton = new InlineKeyboardButton();
        minutesTitleButton.setText("–ú–∏–Ω—É—Ç—ã: ");
        minutesTitleButton.setCallbackData("do-nothing");
        minutesRow.add(minutesTitleButton);

        InlineKeyboardButton minutesMinusButton = new InlineKeyboardButton();
        minutesMinusButton.setText("‚ûñ");
        minutesMinusButton.setCallbackData("jira-worklogs-time-" + issue + "-" + hours + "-"+
                (minutes < 5 ? 0 : minutes - 5));
        minutesRow.add(minutesMinusButton);

        InlineKeyboardButton minutesCountButton = new InlineKeyboardButton();
        minutesCountButton.setText(minutes.toString());
        minutesCountButton.setCallbackData("do-nothing");
        minutesRow.add(minutesCountButton);

        InlineKeyboardButton minutesPlusButton = new InlineKeyboardButton();
        minutesPlusButton.setText("‚ûï");
        minutesPlusButton.setCallbackData("jira-worklogs-time-" + issue + "-" + hours + "-"+
                (minutes > 55 ? 55 : minutes + 5));
        minutesRow.add(minutesPlusButton);

        InlineKeyboardButton confirmButton = new InlineKeyboardButton();
        confirmButton.setText("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å");
        if(hours == 0 && minutes == 0) {
            confirmButton.setCallbackData("do-nothing");
        } else {
            confirmButton.setCallbackData("jira-worklogs-confirm-" + issue + "-" + hours + "-" + minutes);
        }

        List<InlineKeyboardButton> confirmRow = new ArrayList<>();
        confirmRow.add(confirmButton);

        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("\uD83D\uDD19 –ù–∞–∑–∞–¥");
        backButton.setCallbackData("jira-worklogs");
        List<InlineKeyboardButton> backRow = new ArrayList<>();
        backRow.add(backButton);

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        inlineKeyboardMarkup.setKeyboard(List.of(hoursRow, minutesRow, confirmRow, backRow));

        messageSenderService.sendMessage(userId, text, true, inlineKeyboardMarkup);
        userService.setContext(userId, "jira-worklogs-time");
    }



    private List<Issue> getInProgressTaskList() {
        return worklogsService.getInProgress().getIssues().stream()
                .map(issue -> Issue.builder()
                        .label(issue.getKey())
                        .summary(issue.getFields().getSummary())
                        .build())
                .collect(Collectors.toList());
    }

    public void confirmWorklog(String userId, String issue, Integer hours, Integer minutes) {
        IssueWorklog issueWorklog = new IssueWorklog();
        issueWorklog.setIssueId(issue);
        issueWorklog.setMinutes(hours * 60 + minutes);

        worklogsService.addWorklogs(List.of(issueWorklog));


        String hoursString = "";
        String minutesString = "";

        if(hours != 0) {
            if(hours == 1) {
                hoursString += "—Ü–µ–ª—ã–π " + hours.toString() + " —É–Ω—ã–ª—ã–π —á–∞—Å";
            } else if (hours > 1 && hours < 5) {
                hoursString += hours.toString() + " –±–µ—Å—Ü–µ–ª—å–Ω–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —á–∞—Å–∞";
            } else {
                hoursString += hours.toString() + " –±–µ—Å—Ü–µ–ª—å–Ω–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —á–∞—Å–æ–≤";
            }
        }

        if(minutes != 0) {
            if(hours != 0) {
                minutesString += "–∏ ";
            } else {
                minutesString += "–∂–∞–ª–∫–∏—Ö ";
            }
            minutesString += minutes.toString() + " –º–∏–Ω—É—Ç";
        }

        String text = """
                –û—Ç–ª–∏—á–Ω–æ, –∫ –∑–∞–¥–∞—á–µ %s —Ç—ã –¥–æ–±–∞–≤–∏–ª %s %s üéâ
                
                –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!
                """.formatted(issue, hoursString, minutesString);

        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("\uD83D\uDD19 –ù–∞–∑–∞–¥");
        backButton.setCallbackData("jira-worklogs");
        List<InlineKeyboardButton> backRow = new ArrayList<>();
        backRow.add(backButton);

        InlineKeyboardButton menuButton = new InlineKeyboardButton();
        menuButton.setText("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
        menuButton.setCallbackData("/menu");
        List<InlineKeyboardButton> menuRow = new ArrayList<>();
        menuRow.add(menuButton);

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        inlineKeyboardMarkup.setKeyboard(List.of(backRow, menuRow));

        messageSenderService.sendMessage(userId, text, true, inlineKeyboardMarkup);
        userService.setContext(userId, "jira-main");
    }

    public void statusMenu(String userId) {
        String text = """
                –ó–Ω–∞–µ—à—å, –º–Ω–µ –Ω–µ —Ö–æ—á–µ—Ç—Å—è —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è... –ú–æ–∂–µ—Ç –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏–º –≤—Å–µ —Ç–≤–æ–∏ –∑–∞–¥–∞—á–∏?
                
                –ü—Ä–æ—â–∞–π, –∂–µ—Å—Ç–æ–∫–∏–π –º–∏—Ä!
                """;

        InlineKeyboardButton deleteButton = new InlineKeyboardButton();
        deleteButton.setText("–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏");
        deleteButton.setCallbackData("jira-status-delete-all");
        List<InlineKeyboardButton> deleteRow = new ArrayList<>();
        deleteRow.add(deleteButton);

        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("\uD83D\uDD19 –ù–∞–∑–∞–¥");
        backButton.setCallbackData("jira-main");
        List<InlineKeyboardButton> backRow = new ArrayList<>();
        backRow.add(backButton);

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        inlineKeyboardMarkup.setKeyboard(List.of(deleteRow, backRow));

        messageSenderService.sendMessage(userId, text, true, inlineKeyboardMarkup);
        userService.setContext(userId, "jira-status");
    }

    public void statusDone(String userId) {
        String text = """
                –ü–æ—á–µ–º—É-—Ç–æ —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å‚òπÔ∏è
                
                –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≤—Ç—Ä–∞?üòâ
                """;

        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("\uD83D\uDD19 –ù–∞–∑–∞–¥");
        backButton.setCallbackData("/jira");
        List<InlineKeyboardButton> backRow = new ArrayList<>();
        backRow.add(backButton);

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        inlineKeyboardMarkup.setKeyboard(List.of(backRow));

        messageSenderService.sendMessage(userId, text, true, inlineKeyboardMarkup);
        userService.setContext(userId, "jira-status-done");
    }

    public void showMenu(String userId) {
        String text = """
                –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏ –≤ Jira:
                
                """;

        InlineKeyboardButton worklogsButton = new InlineKeyboardButton();
        worklogsButton.setText("‚è≥ –î–æ–±–∞–≤–∏—Ç—å –≤–æ—Ä–∫–ª–æ–≥–∏");
        worklogsButton.setCallbackData("jira-worklogs");
        List<InlineKeyboardButton> worklogsRow = new ArrayList<>();
        worklogsRow.add(worklogsButton);

        InlineKeyboardButton editButton = new InlineKeyboardButton();
        editButton.setText("‚úÖ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏");
        editButton.setCallbackData("jira-status");
        List<InlineKeyboardButton> editRow = new ArrayList<>();
        editRow.add(editButton);

        InlineKeyboardButton backButton = new InlineKeyboardButton();
        backButton.setText("\uD83D\uDD19 –ù–∞–∑–∞–¥");
        backButton.setCallbackData("/menu");
        List<InlineKeyboardButton> backRow = new ArrayList<>();
        backRow.add(backButton);

        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();
        inlineKeyboardMarkup.setKeyboard(List.of(worklogsRow, editRow , backRow));

        messageSenderService.sendMessage(userId, text, true, inlineKeyboardMarkup);
        userService.setContext(userId, "jira-main");
    }
}
